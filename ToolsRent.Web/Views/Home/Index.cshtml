@{
    ViewBag.Title = "Home Page";
}
<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.11.5/css/jquery.dataTables.min.css">
<link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
<link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jquery-datetimepicker/2.5.20/jquery.datetimepicker.min.css">
<main>
    <div class="row">
        <div class="col">
            <button class='btn btn-warning btn-space btn-sm'
                    data-tooltip='tooltip'
                    data-bs-toggle='modal'
                    data-bs-target='#ReservationModal'
                    onclick='newReservationModal()'>
                Stvori novu rezervaciju
            </button>
        </div>
    </div>
    <br />
    <table id="reservations" class="table table-bordered table-hover dataTable table-row-border table-striped  " width="100%">
        <thead>
            <tr>
                <th>Broj Rezervacije</th>

                <th>Ime i Prezime</th>

                <th>Datum rezervacije</th>

                <th>Napomena</th>

                <th>Ukupna cijena</th>

                <th>Akcija</th>
            </tr>
        </thead>
        <tbody></tbody>
    </table>
</main>

@*//modal za create entry*@
@Html.Partial("~/Views/Reservations/_ReservationModal.cshtml")

@*//modal za create tools entry*@
@Html.Partial("~/Views/Reservations/_ToolReservationModal.cshtml")



@section Scripts
{
    <script src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.min.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-datetimepicker/2.5.20/jquery.datetimepicker.full.min.js"></script>
    <script src="https://cdn.jsdelivr.net/momentjs/latest/moment.min.js"></script>

    <script type="text/javascript">
        ///**********************/
        var reservationID_Global = 0;
        var table;
        var price_Global = 0;
        var priceDateAdjusted = 0;
        ///**********************/

        $(document).ready(function () {
            var action = '@Url.Action("ReservationsHandler","Reservations")';
            table = $('#reservations').DataTable({
                "ajax": {
                    "type": "POST",
                    "url": action ,
                    "contentType": 'application/json; charset=utf-8',
                    'data': function (data) { return data = JSON.stringify(data); }
                },
                "drawCallback": function( settings ) {

                },
                responsive: true,

                paging: true,
                searching: true,
                ordering: true,
                order: [[ 0, "desc" ]],
                "columns": [
                    { "data": "ReservationID"},
                    { "data": "ImePrez"  },
                    { "data": "OfferDate" },
                    { "data": "Note" },
                    { "data": "PriceAll"},
                    {
                        "width": "20px",
                        "orderable": false,
                        "render": function (data, type, row, meta) {

                            var htmlChunk = '' + '<a class="editRes" data-id="' + row.ReservationID + '" href="#"><span class="fa fa-lg fa-pencil"></span></a>';
                            htmlChunk += '<a class="deleteItem" data-delete-data="' + row.ReservationID + '" href="#" onclick="deleteReservation(' + row.ReservationID + ')"><span class="fa fa-lg fa-trash" style="padding-top:10px"></span></a>';

                            return htmlChunk;
                        }
                    }
                ]
            });
            $('#reservations').on('click', '.editRes', function (e) {
                _ReservationModal.modal('show');
                var reservationID = $(this).data('id');
                editReservation(reservationID);
            });
        });

        //modal 1 - reservation modal
        var _ReservationModal = $("#ReservationModal");
        var _htmlContainerReservation = $("#htmlContainerReservation");
        //modal 2 - tool reservation modal
        var _ToolReservationModal = $("#ToolReservationModal");
        var _htmlContainerToolReservation = $("#htmlContainerToolReservation");

        var deleteReservation = function (reservationID) {
            $.ajax({
                type: 'GET',
                url: '/Reservations/DeleteReservation',
                data: { reservationID: reservationID },
                success: function (response) {
                    table.ajax.reload();
                },
                error: function (xhr, status, error) {
                    alert("Error deleting reservation.");
                }
            });
            return false; // Prevent the default form submission behavior
        }

        //reservation modal
        var newReservationModal = function () {
            reservationID_Global = 0;//allways when we click create new we don need to remember nothing
            action = "@Url.Action( "InjectReservationView", "Reservations")"

            $.ajax({
                url: action
            }).done(function (response) {
                    _htmlContainerReservation.html(response);
                    $('#reservationCreateForm').on('submit', function (e) {
                        e.preventDefault();
                    });
                    debugger;
                    $('#OfferDate').datetimepicker({
                        format: 'd/m/Y H:i:s',
                        onClose: function (dateText, inst) {
                            debugger;


                        }
                    });
                $('#PriceAll').prop('disabled', true);
                }).fail(function (xhr) {
                    alert("Error 1.");
                });
            return false;
        }

        var createReservation = function () {
            // if first time and offer was not created save offer to DB
            debugger;
            if (reservationID_Global == 0) {
                var imePrez = $("#ImePrez").val();
                var offerDate = $("#OfferDate").val();
                //var note = $("#OfferDate").val();
                //var priceall = $("#PriceAll").val();

                if (!imePrez || !offerDate) {
                    alert("Molimo vas popunite sva polja.");
                    return false;
                } else {
                    var resForm = $("#reservationCreateForm");
                    var formData = resForm.serialize();
                    $.ajax({
                        type: 'POST',
                        url: '/Reservations/CreateReservation',
                        data: formData,
                        success: function (response) {
                            debugger;
                            if (response.success) {
                                reservationID_Global = response.reservationID;
                                table.ajax.reload();
                                newToolReservationModal(response.reservationID);
                                table.ajax.reload();
                            } else {
                                alert("Error 2.");
                            }
                        },
                        error: function (xhr, status, error) {
                            alert("Error 3.");
                        }
                    });
                }
            } else {
                //else just raise modal for adding tools
                debugger;
                newToolReservationModal(reservationID_Global);
                table.ajax.reload();
            }
            return false;
        }

        var newToolReservationModal = function (reservationID) {
            debugger;
            //get html for modal view content
            var action = "@Url.Action("InjectToolReservationView", "Reservations")";
            $.ajax({
                type: 'GET',
                url: action,
                data: { reservationID: reservationID },
                success: function (response) {
                    debugger;
                    //inject to modal
                    _renderFormCreateToolReservation(response);

                },
                error: function (xhr, status, error) {
                    debugger;
                    alert("Error 4.");
                }
            });
            return false;
        }

        var _renderFormCreateToolReservation = function (response) {
            _htmlContainerToolReservation.html(response);
            $('#toolReservationCreateForm').on('submit', function (e) {
                e.preventDefault();
            });

            //obsolete
            @*$.ajax({
                type: 'GET',
                url: '@Url.Action("GetToolTypes", "Reservations")',
                success: function (response) {
                    if (response != null) {
                        populateToolTypesSelect(response);
                    } else {

                    }
                },
                error: function (xhr, status, error) {

                }
            });*@

            $('#Price').prop('disabled', true);

            // select2 call wiht infinite scrolling - lazy loading
            try {
                $('#toolTypesSelect').select2({
                    dropdownParent: $('#ToolReservationModal'),
                    debug: true,
                    ajax: {
                        url: '@Url.Action("GetToolTypesSelect2", "Reservations")',
                        dataType: 'json',
                        cache: true,
                        data: function (params) {
                            var query = {
                                search: params.term,
                                page: params.page || 1
                            }
                            return query;
                        }
                    }
                }).on('select2:select', function (e) {
                    // get selected tool and extract price
                    // not the best code but in a hurry:-)
                    var price = e.params.data.text;
                    price = price.substring(price.indexOf('€') + 1)
                    price_Global = parseFloat(price);
                    tryCalculatePrice();
                    $('#Price').val(parseFloat(priceDateAdjusted))
                });

                $('#DateFrom').datetimepicker({
                    format: 'd/m/Y H:i:s',
                    onClose: function (dateText, inst) {
                        tryCalculatePrice();
                        $('#Price').val(parseFloat(priceDateAdjusted))
                    }
                });
                $('#DateTo').datetimepicker({
                    format: 'd/m/Y H:i:s',
                    onClose: function (dateText, inst) {
                        tryCalculatePrice();
                        $('#Price').val(parseFloat(priceDateAdjusted))
                    }
                });
            } catch (e) {
                alert("Error 5.");
            }
            return false;
        }


        function tryCalculatePrice() {
            debugger;
            var dateFrom = $('#DateFrom').val();
            var dateTo = $('#DateTo').val();


            if (dateFrom && dateTo) {
                var startDateParts = dateFrom.split(/[\/ :]/);
                var endDateParts = dateTo.split(/[\/ :]/);

                var startDate = new Date(startDateParts[2], startDateParts[1] - 1, startDateParts[0], startDateParts[3], startDateParts[4], startDateParts[5]);
                var endDate = new Date(endDateParts[2], endDateParts[1] - 1, endDateParts[0], endDateParts[3], endDateParts[4], endDateParts[5]);

                var timeDifferenceMs = endDate.getTime() - startDate.getTime();

                var timeDifferenceDays = timeDifferenceMs / (1000 * 3600 * 24);

                var discountRate = 0;
                if (timeDifferenceDays >= 7) {
                    discountRate = 0.1;
                } else if (timeDifferenceDays >= 3) {
                    discountRate = 0.05;
                }

                var pricePerDay = price_Global;

                priceDateAdjusted = (1 - discountRate) * timeDifferenceDays * pricePerDay;

            }
        }

        //obsolete when having select2
        //function populateToolTypesSelect(toolTypes) {

        //    var selectElement = $('#toolTypeSelect');
        //    selectElement.empty();
        //    $.each(toolTypes, function (index, toolType) {
        //        var option = $('<option>', {
        //            value: toolType.ID,
        //            text: toolType.ToolKind + ' - $' + toolType.Price
        //        });
        //        selectElement.append(option);
        //    });
        //}

        var createToolReservation = function () {
            debugger;

            action = "@Url.Action( "CreateToolReservation", "Reservations")";

            var dateFrom = $("#DateFrom").val();
            var dateTo = $("#DateTo").val();
            var price = $("#Price").val();
            var toolID = $('#toolTypesSelect').val();

            if (!dateFrom || !dateTo || !price || !toolID) {
                alert("Molimo vas popunite sva polja.");
                return false;
            } else {
                $("#ToolID").val(toolID);
                debugger;
                var format = "DD/MM/YYYY HH:mm:ss";
                var dateFParsed = moment(dateFrom, format);
                var dateTParsed = moment(dateTo, format);

                if (dateFParsed >= dateTParsed) {
                    alert("Datumi moraju biti kronološki.");
                } else {
                    var resForm = $("#toolReservationCreateForm");
                    var formData = resForm.serialize();
                    formData += '&Price=' + priceDateAdjusted.toFixed(0);
                    $.ajax({
                        type: 'POST',
                        url: action,
                        data: formData,
                        success: function (response) {
                            if (response.success) {
                                _ToolReservationModal.modal('hide');
                                _ReservationModal.modal('show');
                                fillReservation(response.reservationID);
                            } else {
                                alert("Error 6.");
                            }
                        },
                        error: function (xhr, status, error) {
                            alert("Error 7.");
                        }
                    });
                    return false;
                }
            }
        }

        var editReservation = function (reservationID) {
            action = "@Url.Action( "InjectReservationView", "Reservations")";
            $.ajax({
                url: action
            }).done(function (response) {
                    _htmlContainerReservation.html(response);
                    $('#reservationCreateForm').on('submit', function (e) {
                        e.preventDefault();
                    });
                    debugger;
                    $('#OfferDate').datetimepicker({
                        format: 'd/m/Y H:i:s',
                        onClose: function (dateText, inst) {
                            debugger;

                        }
                    });
                    fillReservation(reservationID);
                    reservationID_Global = reservationID;
                }).fail(function (xhr) {
                    alert("Error 8.");
                });
            return false;
        }

        var fillReservation = function (reservationID) {
            //ponovo dohvati ponudu - rezervaciju
            $.ajax({
                url: '/Reservations/GetReservationByID',
                data: { reservationID: reservationID },
                success: function (response) {
                    $('#reservationCreateForm').off('submit');
                    $('#reservationCreateForm').on('submit', function (e) {
                        e.preventDefault();
                    });
                    fillReservationFormData(response, reservationID);
                },
                error: function (xhr, status, error) {
                    alert("Error 9.");
                }
            });
            return false;
        }

        var fillReservationFormData = function (response, reservationID) {
            //fill ime i prezime i datum i cijenu
            $("#ImePrez").val(response.ImePrez);
            $("#OfferDate").val(response.OfferDate);
            $("#Note").val(response.Note);
            $("#PriceAll").val(response.PriceAll);

            //Reinitialize Datatable
            if ($.fn.DataTable.isDataTable('#toolReservationsForReservation')) {
                debugger;
                $('#toolReservationsForReservation').DataTable().destroy();
            }

            var action = '@Url.Action("GetToolReservationsByReservationID", "Reservations")';
            var table2 = $('#toolReservationsForReservation').DataTable({
                "ajax": {
                    "type": "POST",
                    "url": action,
                    "contentType": 'application/json; charset=utf-8',
                    'data': function (data) {
                        data.reservationID = reservationID;
                        return data = JSON.stringify(data);
                    }
                },
                "drawCallback": function (settings) {
                },
                responsive: true,
                paging: true,
                searching: true,
                ordering: true,
                "columns": [{ "data": "ToolType" },
                { "data": "DateFrom" },
                { "data": "DateTo" },
                { "data": "Price" },
                    {
                        "width": "20px",
                        "orderable": false,
                        "render": function (data, type, row, meta) {
                        var htmlChunk = '<a class="deleteItem" data-delete-data="' + row.ToolReservationID + "###" + row.ReservationID + '" href="#" onclick="deleteTools(' + row.ToolReservationID + ', ' + row.ReservationID + ')"><span class="fa fa-lg fa-trash" style="padding-top:10px"></span></a>';
                            return htmlChunk;
                    }
                }]
            });
        }


        function deleteTools(toolReservationID, reservationID) {
            deleteToolReservation(toolReservationID, reservationID);
            _ReservationModal.modal('show');
            editReservation(reservationID);
        }

        var deleteToolReservation = function (toolReservationID, reservationID) {
            $.ajax({
                type: 'GET',
                url: '/Reservations/DeleteToolReservationFromReservation',
                data: { toolReservationID: toolReservationID, reservationID: reservationID },
                success: function (response) {
                    $('#reservationCreateForm').on('submit', function (e) {
                        e.preventDefault();
                    });
                    _ReservationModal.modal('show');
                    editReservation(reservationID);
                },
                error: function (xhr, status, error) {
                    alert("Error 10");
                }
            });
            return false;
        }

    </script>
}